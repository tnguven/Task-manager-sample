# ------------------------------------------------------------- BASE
FROM node:20.14.0-bullseye-slim AS base

ENV PNPM_HOME="/pnpm"
ENV PATH="$PNPM_HOME:$PATH"
ARG PNPM_VERSION=9.3.0

RUN apt-get update && \
   apt-get install -y -qq --no-install-recommends \
   procps \
   build-essential \
   python3 && \
   corepack enable && \
   corepack prepare pnpm@${PNPM_VERSION} --activate && \
   rm -rf /var/lib/apt/lists/*

# ------------------------------------------------------------- DEPS
FROM base AS deps

WORKDIR /app

COPY package.json .
COPY pnpm-lock.yaml .
COPY pnpm-workspace.yaml .
COPY tsconfig.json .

WORKDIR /app/pkg/server
COPY ./pkg/server .

RUN pnpm i --frozen-lockfile

# ------------------------------------------------------------- BUILD
FROM base AS build

WORKDIR /app
COPY --from=deps /app/pnpm-lock.yaml .
COPY --from=deps /app/pnpm-workspace.yaml .
COPY --from=deps /app/package.json .
COPY --from=deps /app/tsconfig.json .
COPY --from=deps /app/node_modules ./node_modules

WORKDIR /app/pkg/server
COPY --from=deps /app/pkg/server/node_modules ./node_modules
COPY --from=deps /app/pkg/server/src ./src
COPY --from=deps /app/pkg/server/esbuild.config.js .
COPY --from=deps /app/pkg/server/package.json .
COPY --from=deps /app/pkg/server/tsconfig.json .

RUN pnpm run build

# ------------------------------------------------------------- RUNNER
FROM base AS runner

WORKDIR /app/pkg/server
COPY --from=build /app/pkg/server/node_modules ./node_modules
COPY --from=build /app/pkg/server/package.json .
COPY --from=build /app/pkg/server/dist ./dist
COPY --from=build /app/pkg/server/package.json .

USER node
EXPOSE 8080

ENTRYPOINT ["node", "dist/main.js"]